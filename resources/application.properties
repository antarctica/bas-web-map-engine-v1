# Spring Boot default application properties
# Note: this appears not to work - see http://stackoverflow.com/questions/28103852/spring-boot-session-timeout among others
server.session-timeout=3600
server.tomcat.access-log-enabled=true
# Note: this changes to server.error.whitelabel.enabled in later versions of Spring Boot
server.error.whitelabel.enabled=false
# Allow Thymeleaf templates to be reloaded at dev time
spring.thymeleaf.cache=false
spring.template.cache=false
# Spring Security logging level
#logging.level.org.springframework.security: DEBUG
# Maximum size of a file upload
spring.http.multipart.max-file-size=100MB
# Maximum size of a multipart file upload request
spring.http.multipart.max-request-size=128MB
# Turn off security headers for static resources
security.ignored=/static/**
# Make sure the Spring autogenerated admin endpoints don't clash with other apps in same Tomcat container
management.endpoints.jmx.domain=uk.ac.antarctica.mapengine
management.endpoints.jmx.unique-names=true
# Database connection parameters
datasource.magic.driverClassName=org.postgresql.Driver
datasource.magic.url=jdbc:postgresql://localhost:5432/magic
# Credentials are profile-specific and appear in application-<profilename>.properties overrides
datasource.magic.username=
datasource.magic.password=
datasource.magic.maxConnections=0
# Web mapping table locations
postgres.local.mapsTable=webmap.maps
postgres.local.thumbnailsTable=webmap.thumbnails
postgres.local.embeddedMapsTable=webmap.embedded_maps
postgres.local.prefsTable=webmap.preferences
postgres.local.endpointsTable=webmap.endpoints
postgres.local.usermapsTable=webmap.usermaps
postgres.local.userlayersTable=webmap.userlayers
postgres.local.userRolesTable=webmap.user_roles
postgres.local.rolesTable=webmap.roles
postgres.local.rolePropsTable=webmap.role_props
postgres.local.issuesTable=webmap.issues
# Local Geoserver internal URL for REST
geoserver.internal.url=
# Credentials are profile-specific and appear in application-<profilename>.properties overrides
geoserver.internal.username=
geoserver.internal.password=
geoserver.internal.userWorkspace=user
# Local Geoserver external URL(s) by which it may be accessed - comma separated list
geoserver.external.url=
# Default map that '/' URL redirects to
default.map=
default.favicon=bas.ico
default.title=MAGIC Web Mapping Services Development
default.logo=bas.png
default.logoUrl=https://www.bas.ac.uk
default.backgroundColor=lightblue
default.login_view=fragments/login
default.cdn=https://cdn.web.bas.ac.uk
# Available plugins for the map control button ribbon - fields <control_name>,<login|public>,<caption>,<tooltip>,<icon_class>,<js_filename>
plugins.map=
# Available plugins for the navbar - fields <control_name>,<login|public>,<caption>,<tooltip>,<icon_class>,<js_filename>
plugins.nav=
# Authentication providers (Geoserver is, as of 2017/10, wired into BAS LDAP)
authentication.geoserver=yes
# Local software
# Path to ogr2ogr executable
software.ogr2ogr=/usr/bin/ogr2ogr
# Path to the gdal supporting data directory
software.gdal_data=/usr/share/gdal
# Nasty hack - using ECW/JP2k with Geoserver requires the gdal 1.9.2 libs bundled with the gdal extension.  This is old and will break sometime
# Geoserver developers will need to cope with this before very long.  We would like to use the full gdal suite installed by OS package management
# This setting allows the Geoserver LD_LIBRARY_PATH env var to be overridden and so use the global gdal suite
software.ld_library_path_override=yes
# URLs permitted to be proxied by the internal Java proxy (NB will replace with geosolutions.it http_proxy eventually)
proxy.allowed_urls=asp-interface.info,ccamlr.org,polarview.aq,marine-geo.org,bluehabitats.org,gov.gs,aad.gov.au,ac.uk,scar.org,localhost
# Credentials for particular services <url>,<username>,<password>,<realm> - separate different sets by '|'
proxy.credentials=
# Aliases for translating load-balanced endpoints <url>,<translation> - separate different sets by '|'
proxy.aliases=
