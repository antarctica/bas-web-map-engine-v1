---
# Installs GeoServer by deploying a WAR file to Tomcat

# TODO: Add task to check if GeoServer is already installed

- name: check which tomcat applications are deployed
  uri:
              user="{{ app_tomcat_admin_user_username }}"
          password="{{ app_tomcat_admin_user_password }}"
               url="http://{{ app_tomcat_listening_address }}:{{ app_tomcat_listening_port }}/manager/text/list"
    return_content=yes
  register: app_tomcat8_fact_applications_list

- name: download compressed geoserver war file
  get_url:
     url="{{ app_geoserver_war_file_uri }}"
    dest=/tmp/geoserver.war.zip
  when: true == true and '{{ app_geoserver_context }}' not in "{{ app_tomcat8_fact_applications_list.content }}"

- name: create directory to hold uncompressed geoserver war file
  file:
    path=/tmp/geoserver
    state=directory

- name: uncompress geoserver war file
  unarchive:
     src=/tmp/geoserver.war.zip
    dest=/tmp/geoserver/
    copy=no
  when: true == true and '{{ app_geoserver_context }}' not in "{{ app_tomcat8_fact_applications_list.content }}"

- name: deploy geoserver war through tomcat manager api
  shell: "curl -k -X PUT -u {{ app_tomcat_admin_user_username }}:{{ app_tomcat_admin_user_password }} --upload-file /tmp/geoserver/geoserver.war 'http://{{ app_tomcat_listening_address }}:{{ app_tomcat_listening_port }}/manager/text/deploy?path={{ app_geoserver_path }}&version={{ app_geoserver_version }}'"
  changed_when: true
  when: true == true and '{{ app_geoserver_context }}' not in "{{ app_tomcat8_fact_applications_list.content }}"

- name: check which tomcat applications are deployed
  uri:
              user="{{ app_tomcat_admin_user_username }}"
          password="{{ app_tomcat_admin_user_password }}"
               url="http://{{ app_tomcat_listening_address }}:{{ app_tomcat_listening_port }}/manager/text/list"
    return_content=yes
  register: app_tomcat8_fact_applications_list

- name: assert geoserver has been deployed
  assert:
    that:
      - "'{{ app_geoserver_context }}' in app_tomcat8_fact_applications_list.content"

- name: remove geoserver war file
  file:
    path="{{ item }}"
    state=absent
  with_items:
    - /tmp/geosever.war.zip
    - /tmp/geoserver
  when: true == true and '{{ app_geoserver_context }}' not in "{{ app_tomcat8_fact_applications_list.content }}"
